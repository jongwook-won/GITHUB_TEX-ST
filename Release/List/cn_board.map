################################################################################
#                                                                              #
#      IAR Universal Linker V5.2.3.14                                          #
#                                                                              #
#           Link time     =  31/Aug/2022  17:11:39                             #
#           Target CPU    =  A90                                               #
#           List file     =  "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\List\cn_board.m #
#                            ap"                                               #
#           Output file 1 =  "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Exe\cn_board.he #
#                            x"                                                #
#                            Format: intel-extended                            #
#           Command line  =  "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\FS_I2C_DIMM #
#                            IN.r90"                                           #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\avr_pwm.r90 #
#                            "                                                 #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\delay.r90"  #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\main.r90"   #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\timer.r90"  #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\twi.r90"    #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\uart.r90"   #
#                            -o                                                #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Exe\cn_board.he #
#                            x"                                                #
#                            -Fintel-extended -l                               #
#                            "D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\List\cn_board.m #
#                            ap"                                               #
#                            -xmsnio                                           #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\avr\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\src\template\cfgm128.xcl"           #
#                            (-D_..X_INTVEC_SIZE=8C -D_..X_FLASH_NEND=FFFF     #
#                            -D_..X_FLASH_END=1FFFF -D_..X_SRAM_BASE=100       #
#                            -D_..X_SRAM_TBASE=0 -D_..X_SRAM_TSIZE=0           #
#                            -D_..X_SRAM_END=10FF -D_..X_EEPROM_END=FFF        #
#                            -D_..X_EEPROM_START=0) -D_..X_HEAP_SIZE=50        #
#                            -D_..X_TINY_HEAP_SIZE=0 -D_..X_NEAR_HEAP_SIZE=0   #
#                            -D_..X_FAR_HEAP_SIZE=0 -D_..X_HUGE_HEAP_SIZE=0    #
#                            -D_..X_CSTACK_SIZE=200 -D_..X_RSTACK_SIZE=C8      #
#                            -D_..X_FLASH_CODE_END=1FFFF -f                    #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\src\template\cfg3soim.xcl"          #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -P(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0                              #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -s                #
#                            __program_start                                   #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\LIB\CLIB\cl3s-ec_mul.r90"           #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read                     #
#                                                                              #
#                           Copyright (C) 1987-2011 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R10             = REG
  R11             = REG
  R12             = REG
  R13             = REG
  R14             = REG
  R15             = REG
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __SystemLibrary = CLib
  __cpu           = 3
  __cpu_name      = ATmega128
  __enhanced_core = enabled
  __has_elpm      = true
  __memory_model  = 2
  __no_rampd      = enabled
  __rt_version    = 3
  __tiny_avr      = false

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         000010FF 
           _..X_RSTACK_BASE        00000100 
           _..X_CSTACK_END         000010FF 
           _..X_CSTACK_BASE        00000100 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        000010FF 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       000010FF 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      000010FF 
           _..X_FLASH_BASE         0000008C 
           _..X_FLASH_CODE_END     0001FFFF 
           _..X_RSTACK_SIZE        000000C8 
           _..X_CSTACK_SIZE        00000200 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000000 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000050 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         00000FFF 
           _..X_SRAM_END           000010FF 
           _..X_SRAM_TSIZE         00000000 
           _..X_SRAM_TBASE         00000000 
           _..X_SRAM_BASE          00000100 
           _..X_FLASH_END          0001FFFF 
           _..X_FLASH_NEND         0000FFFF 
           _..X_INTVEC_SIZE        0000008C 
    *************************************************************************

  FILE NAME : D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\FS_I2C_DIMMIN.r90
  PROGRAM MODULE, NAME : FS_I2C_DIMMIN

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000000C0 - 00000141 (0x82 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fs_i2c_dimming_fun      000000C0        main (main)
               calls direct
               CSTACK = 00000000 ( 00000006 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000142 - 00000147 (0x6 bytes), align: 1
  Segment part 11.            Intra module refs:   Segment part 12
                                                   fs_i2c_dimming_fun
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000148 - 0000014B (0x4 bytes), align: 1
  Segment part 12.            Intra module refs:   fs_i2c_dimming_fun
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000014C - 00000151 (0x6 bytes), align: 1
  Segment part 13.            Intra module refs:   Segment part 12
                                                   fs_i2c_dimming_fun
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 000015D0 - 000015E3 (0x14 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000015C2 - 000015C8 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 11 (avr_pwm)
                                                   Segment part 14 (avr_pwm)
                                                   Segment part 24 (main)
                                                   Segment part 27 (main)
                                                   Segment part 29 (main)
                                                   Segment part 3 (?largewr)
                                                   Segment part 31 (main)
                                                   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   000015C2 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003C8 - 000003DB (0x14 bytes), align: 0
  Segment part 7.             Intra module refs:   fs_i2c_dimming_fun

    *************************************************************************

  FILE NAME : D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\avr_pwm.r90
  PROGRAM MODULE, NAME : avr_pwm

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000084 - 00000085 (0x2 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Segment part 19
                                                   pwm_dimming_fun
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR3B                00000084 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000086 - 00000087 (0x2 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR3A                00000086 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR3B               0000008A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000008B - 0000008B (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR3A               0000008B 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003DC - 000003F5 (0x1a bytes), align: 0
  Segment part 11.            Intra module refs:   pwm_dimming_fun
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003F6 - 000003FD (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   pwm_dimming_fun
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DUTY_VAL                000003FA 
           OCR3A_VAL               000003F6 
           OCR3B_VAL               000003F8 
           cur_DUTY_VAL            000003FC 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer3_pwm_initial      
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000152 - 00000155 (0x4 bytes), align: 1
  Segment part 17.            Intra module refs:   pwm_dimming_fun
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000156 - 000001CF (0x7a bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwm_dimming_fun         00000156        main (main)
               calls direct
               CSTACK = 00000000 ( 00000004 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000001D0 - 000001D9 (0xa bytes), align: 1
  Segment part 19.            Intra module refs:   pwm_dimming_fun
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 000015E4 - 000015FD (0x1a bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
INITTAB
  Segment part 13. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 000015FE - 00001605 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14

    *************************************************************************

  FILE NAME : D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\delay.r90
  PROGRAM MODULE, NAME : delay

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 000004C2 - 000004C3 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   delay_ms
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_timer             000004C2        timer0_isr (timer)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000001DA - 000001F1 (0x18 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_us                000001DA        Segment part 37 (twi)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000001F2 - 00000207 (0x16 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_ms                000001F2        Segment part 13 (FS_I2C_DIMMIN)
                                                   Segment part 31 (twi)
                                                   main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 1. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 2. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 3. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 4. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000015C9 - 000015CF (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 19 (timer)
                                                   Segment part 21 (uart)
                                                   Segment part 33 (main)
                                                   delay_timer
                                                   edid_read_data (twi)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   000015C9 

    *************************************************************************

  FILE NAME : D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000022 - 00000022 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRE                 00000022 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000023 - 00000023 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTE                00000023 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000031 - 00000031 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 00000031 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000032 - 00000032 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                00000032 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000034 - 00000034 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRC                 00000034 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000035 - 00000035 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   check_comm
                                                   init_mcu
                                                   main
                                                   uart_interrupt_routine (uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                00000035 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000037 - 00000037 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000037 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000038 - 00000038 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                00000038 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003A - 0000003A (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRA                 0000003A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003B - 0000003B (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTA                0000003B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003C - 0000003C (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   EEPROM_Read
                                                   EEPROM_Write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_EECR                 0000003C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003D - 0000003D (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   EEPROM_Read
                                                   EEPROM_Write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_EEDR                 0000003D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003E - 0000003F (0x2 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   EEPROM_Read
                                                   EEPROM_Write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_EEAR                 0000003E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000061 - 00000061 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRF                 00000061 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000062 - 00000062 (0x1 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTF                00000062 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000064 - 00000064 (0x1 bytes), align: 0
  Segment part 16. ROOT.      Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRG                 00000064 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000065 - 00000065 (0x1 bytes), align: 0
  Segment part 17. ROOT.      Intra module refs:   init_mcu
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTG                00000065 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000004C4 - 000004CA (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   analyze_packet
                                                   chk_pwm_data
                                                   main
                                                   start_pwm
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PC_pwm_H                000004C6        fs_i2c_dimming_fun (FS_I2C_DIMMIN)
           PC_pwm_L                000004C7        fs_i2c_dimming_fun (FS_I2C_DIMMIN)
           PC_pwm_flag             000004C8        fs_i2c_dimming_fun (FS_I2C_DIMMIN)
                                                   pwm_dimming_fun (avr_pwm)
           eeprom_pwm_H            000004C9 
           eeprom_pwm_L            000004CA 
           pc_duty_100             000004C4        pwm_dimming_fun (avr_pwm)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000208 - 0000023F (0x38 bytes), align: 1
  Segment part 35.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_mcu                00000208 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000240 - 000002AB (0x6c bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000240        ?cstartup_call_main (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002AC - 00000341 (0x96 bytes), align: 1
  Segment part 37.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           check_comm              000002AC 
               calls direct
               CSTACK = 00000000 ( 0000000A )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000342 - 00000345 (0x4 bytes), align: 1
  Segment part 38.            Intra module refs:   check_comm
                                                   chk_pwm_data
                                                   main
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000346 - 000003E1 (0x9c bytes), align: 1
  Segment part 39.            Intra module refs:   check_comm
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           analyze_packet          00000346 
               calls direct
               CSTACK = 00000000 ( 00000004 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003E2 - 000003E9 (0x8 bytes), align: 1
  Segment part 40.            Intra module refs:   analyze_packet
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003EA - 000003EB (0x2 bytes), align: 1
  Segment part 41.            Intra module refs:   analyze_packet
                                                   check_comm
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003EC - 000003F1 (0x6 bytes), align: 1
  Segment part 42.            Intra module refs:   Segment part 41
                                                   analyze_packet
                                                   check_comm
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003F2 - 00000401 (0x10 bytes), align: 1
  Segment part 43.            Intra module refs:   Segment part 47
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EEPROM_Write            000003F2 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000402 - 0000040F (0xe bytes), align: 1
  Segment part 44.            Intra module refs:   Segment part 49
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EEPROM_Read             00000402 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000410 - 00000443 (0x34 bytes), align: 1
  Segment part 45.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chk_pwm_data            00000410 
               calls direct
               CSTACK = 00000000 ( 00000001 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000444 - 00000447 (0x4 bytes), align: 1
  Segment part 46.            Intra module refs:   chk_pwm_data
                                                   start_pwm
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000448 - 0000044B (0x4 bytes), align: 1
  Segment part 47.            Intra module refs:   chk_pwm_data
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000044C - 00000471 (0x26 bytes), align: 1
  Segment part 48.            Intra module refs:   analyze_packet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           start_pwm               0000044C 
               calls direct
               CSTACK = 00000000 ( 00000001 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000472 - 00000475 (0x4 bytes), align: 1
  Segment part 49.            Intra module refs:   start_pwm
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 18. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 19. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 20. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 21. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 00001606 - 00001616 (0x11 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
INITTAB
  Segment part 26. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 00001617 - 00001648 (0x32 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 00001649 - 0000167F (0x37 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 00001680 - 00001694 (0x15 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
INITTAB
  Segment part 34. TENTATIVE. Used definition from delay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000003FE - 0000040E (0x11 bytes), align: 0
  Segment part 24.            Intra module refs:   main
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 0000040F - 00000440 (0x32 bytes), align: 0
  Segment part 27.            Intra module refs:   check_comm
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000441 - 00000477 (0x37 bytes), align: 0
  Segment part 29.            Intra module refs:   analyze_packet
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000478 - 0000048C (0x15 bytes), align: 0
  Segment part 31.            Intra module refs:   chk_pwm_data

    *************************************************************************

  FILE NAME : D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\timer.r90
  PROGRAM MODULE, NAME : timer

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000004A - 0000004B (0x2 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                0000004A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004C - 0000004D (0x2 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT1                0000004C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004E - 0000004E (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               0000004E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004F - 0000004F (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               0000004F 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000051 - 00000051 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR0                 00000051 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000052 - 00000052 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT0                00000052 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000053 - 00000053 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0                00000053 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000056 - 00000056 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIFR                 00000056 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000057 - 00000057 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK                00000057 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007A - 0000007A (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   init_timer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1C               0000007A 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000004CB - 000004D1 (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   timer_interrupt_routine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LED_TIMER               000004D1        main (main)
           chk_PWMTimer            000004CF        analyze_packet (main)
                                                   main (main)
           ext_usLEDTimer          000004CD        fs_i2c_dimming_fun (FS_I2C_DIMMIN)
           ext_usRxTimer           000004CB        check_comm (main)
                                                   uart_interrupt_routine (uart)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000476 - 000004B5 (0x40 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_timer              00000476        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000004B6 - 000004BD (0x8 bytes), align: 1
  Segment part 22.            Intra module refs:   timer0_isr::??INTVEC 60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_isr              000004B6 
               interrupt function
               CSTACK = 00000000 ( 00000006 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000004BE - 000004C1 (0x4 bytes), align: 1
  Segment part 23.            Intra module refs:   timer0_isr
                                                   timer_interrupt_routine
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000004C2 - 000004E9 (0x28 bytes), align: 1
  Segment part 24.            Intra module refs:   timer_interrupt_routine::??INTVEC 48
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_interrupt_routine
                                   000004C2 
               interrupt function
               CSTACK = 00000000 ( 00000006 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000004EA - 000004F7 (0xe bytes), align: 1
  Segment part 25.            Intra module refs:   Segment part 23
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000004F8 - 00000505 (0xe bytes), align: 1
  Segment part 26.            Intra module refs:   timer0_isr
                                                   timer_interrupt_routine
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000506 - 00000513 (0xe bytes), align: 1
  Segment part 27.            Intra module refs:   timer0_isr
                                                   timer_interrupt_routine
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 11. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 12. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 13. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 14. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000033 (0x34 bytes), align: 1
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer_interrupt_routine::??INTVEC 48
                                   00000030 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003F (0x40 bytes), align: 1
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer0_isr::??INTVEC 60
                                   0000003C 
    -------------------------------------------------------------------------
CSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 20. TENTATIVE. Used definition from delay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\twi.r90
  PROGRAM MODULE, NAME : twi

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000070 - 00000070 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   init_Twi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TWBR                 00000070 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000071 - 00000071 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   init_Twi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TWSR                 00000071 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000073 - 00000073 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   Segment part 24
                                                   Twi_Byte_Read
                                                   Twi_Byte_Write
                                                   init_Twi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TWDR                 00000073 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000074 - 00000074 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   Segment part 20
                                                   Segment part 22
                                                   Segment part 27
                                                   TWI_Start
                                                   Twi_Byte_Read
                                                   Twi_Byte_Write
                                                   init_Twi
                                                   twi_read
                                                   twi_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TWCR                 00000074 
    -------------------------------------------------------------------------
NEAR_F
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edid_data_3200_930      
    -------------------------------------------------------------------------
NEAR_F
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edid_data_1920_1080     
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000004D2 - 00000551 (0x80 bytes), align: 0
  Segment part 13.            Intra module refs:   twi_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edid_read_data          000004D2 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000514 - 00000529 (0x16 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_Twi                00000514        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000052A - 00000539 (0x10 bytes), align: 1
  Segment part 16.            Intra module refs:   Segment part 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TWI_Start               0000052A 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000053A - 0000053F (0x6 bytes), align: 1
  Segment part 17.            Intra module refs:   Segment part 24
                                                   TWI_Start
                                                   Twi_Byte_Write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000540 - 00000559 (0x1a bytes), align: 1
  Segment part 18.            Intra module refs:   Segment part 35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Twi_Byte_Write          00000540 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000055A - 0000056B (0x12 bytes), align: 1
  Segment part 19.            Intra module refs:   twi_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Twi_Byte_Read           0000055A 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000056C - 00000571 (0x6 bytes), align: 1
  Segment part 20.            Intra module refs:   TWI_Start
                                                   Twi_Byte_Read
                                                   Twi_Byte_Write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000572 - 00000577 (0x6 bytes), align: 1
  Segment part 21.            Intra module refs:   TWI_Start
                                                   Twi_Byte_Read
                                                   Twi_Byte_Write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000578 - 00000581 (0xa bytes), align: 1
  Segment part 22.            Intra module refs:   TWI_Start
                                                   Twi_Byte_Read
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Twi_Multiple_Read       
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000582 - 00000587 (0x6 bytes), align: 1
  Segment part 24.            Intra module refs:   Twi_Byte_Read
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000588 - 000005AB (0x24 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           twi_write               00000588        Segment part 11 (FS_I2C_DIMMIN)
               calls direct
               CSTACK = 00000000 ( 00000004 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005AC - 000005AD (0x2 bytes), align: 1
  Segment part 26.            Intra module refs:   twi_read
                                                   twi_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005AE - 000005B3 (0x6 bytes), align: 1
  Segment part 27.            Intra module refs:   Segment part 26
                                                   Twi_Byte_Write
                                                   init_Twi
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005B4 - 000005B5 (0x2 bytes), align: 1
  Segment part 28.            Intra module refs:   twi_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005B6 - 000005B9 (0x4 bytes), align: 1
  Segment part 29.            Intra module refs:   Segment part 28
                                                   twi_read
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005BA - 000005F7 (0x3e bytes), align: 1
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           twi_read                000005BA        fs_i2c_dimming_fun (FS_I2C_DIMMIN)
               calls direct
               CSTACK = 00000000 ( 00000002 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005F8 - 000005FD (0x6 bytes), align: 1
  Segment part 31.            Intra module refs:   twi_read
                                                   twi_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005FE - 000005FF (0x2 bytes), align: 1
  Segment part 32.            Intra module refs:   twi_read
                                                   twi_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000600 - 00000601 (0x2 bytes), align: 1
  Segment part 33.            Intra module refs:   twi_read
                                                   twi_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000602 - 00000605 (0x4 bytes), align: 1
  Segment part 34.            Intra module refs:   Segment part 33
                                                   twi_read
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000606 - 00000607 (0x2 bytes), align: 1
  Segment part 35.            Intra module refs:   Segment part 28
                                                   Segment part 34
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000608 - 00000609 (0x2 bytes), align: 1
  Segment part 36.            Intra module refs:   Segment part 34
                                                   twi_read
                                                   twi_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000060A - 0000060D (0x4 bytes), align: 1
  Segment part 37.            Intra module refs:   Segment part 29
                                                   Segment part 36
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edid_save_3200          
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edid_save_1920          
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 6. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 7. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 8. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
CSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 14. TENTATIVE. Used definition from delay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : D:\LUCID ½Å·Ú¼º\CN_BOARD\Release\Obj\uart.r90
  PROGRAM MODULE, NAME : uart

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000029 - 00000029 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   init_uart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR0L               00000029 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   init_uart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0B               0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   init_uart0
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0A               0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   init_uart0
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR0                 0000002C 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 5. TENTATIVE. Used definition from main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTC                
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   init_uart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR0H               00000090 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   init_uart0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0C               00000095 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000098 - 00000098 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   init_uart1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR1H               00000098 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000099 - 00000099 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   init_uart1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR1L               00000099 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   init_uart1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1B               0000009A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   init_uart1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1A               0000009B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   init_uart1
                                                   uart_interrupt_routine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR1                 0000009C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   init_uart1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1C               0000009D 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000552 - 0000056A (0x19 bytes), align: 0
  Segment part 21.            Intra module refs:   uart_interrupt_routine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ext_ucRxStatus          0000056A        check_comm (main)
                                                   main (main)
           ext_ucRxbuf             00000552        analyze_packet (main)
                                                   check_comm (main)
           ext_usLen               00000568 
           ext_usRxCnt             00000566 
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ext_ucTxbuf             
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000060E - 00000627 (0x1a bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_uart0              0000060E        main (main)
               CSTACK = 00000000 ( 00000001 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000628 - 0000062D (0x6 bytes), align: 1
  Segment part 25.            Intra module refs:   init_uart0
                                                   init_uart1
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000062E - 00000651 (0x24 bytes), align: 1
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_uart1              0000062E        main (main)
               CSTACK = 00000000 ( 00000001 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000652 - 0000065D (0xc bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar                 00000652        put_one_char (?printf)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart0_rx_char           
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send_data               
               calls direct
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000065E - 0000073D (0xe0 bytes), align: 1
  Segment part 34.            Intra module refs:   uart_interrupt_routine::??INTVEC 120
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_interrupt_routine
                                   0000065E 
               interrupt function
               CSTACK = 00000000 ( 0000000C )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 14. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 15. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 16. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                
    -------------------------------------------------------------------------
ABSOLUTE
  Segment part 17. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007B (0x7c bytes), align: 1
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uart_interrupt_routine::??INTVEC 120
                                   00000078 
    -------------------------------------------------------------------------
CSTACK
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 22. TENTATIVE. Used definition from delay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0\avr\LIB\CLIB\cl3s-ec_mul.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000073E - 00000743 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00000740 
           ?C_EXIT                 00000740 
           ?C_FUNCALL              0000073E 
           _exit                   0000073E        ?cstartup_call_main (?C_STARTUP)
           exit                    0000073E        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000744, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              00000744        Segment part 0 (?RESET)
           __RESTART               00000744 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram_new_way
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000744 - 0000074F (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?zero_reg_initialization
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000750 - 00000753 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    00000750 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000754 - 0000075B (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      00000754        ?<Segment init: NEAR_I> (FS_I2C_DIMMIN)
                                                   ?<Segment init: NEAR_Z> (delay)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000075C - 00000767 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     0000075C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_EC_MUL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000768 - 00000777 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_EC_MUL_L02           00000768        _large_write (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000778 - 00000783 (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_L02             00000778        analyze_packet (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000784 - 000007AB (0x28 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIVMOD_L02          00000784        ?SS_DIVMOD_L02 (?SS_DIVMOD_L02)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000007AC - 000007DB (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_DIVMOD_L02          000007B4        Segment part 20 (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EC_MUL_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EC_MUL_L03           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000007DC - 000007EB (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_L03             000007DC        Segment part 9 (?FLOATS_L04)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000007EC - 00000831 (0x46 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIVMOD_L03          000007EC        Segment part 40 (?largewr)
                                                   pwm_dimming_fun (avr_pwm)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_DIVMOD_L03          
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000832 - 00000841 (0x10 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_L03              00000832        ?SL2F_L04 (?FLOATS_L04)
                                                   Segment part 9 (?FLOATS_L04)
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_Q_L03            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLOATS_L04

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000842 - 0000086B (0x2a bytes), align: 1
  Segment part 0.             Intra module refs:   ?F2SL_L04
                                                   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000086C - 000008BF (0x54 bytes), align: 1
  Segment part 1.             Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ROUND_L04            0000088C 
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008C0 - 000008C1 (0x2 bytes), align: 1
  Segment part 3.             Intra module refs:   ?F_ROUND_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008C2 - 000008CB (0xa bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL2F_L04               000008C2        float_conversion (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008CC - 000008D7 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   ?SL2F_L04
                                                   ?UL2F_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008D8 - 000008DB (0x4 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL2F_L04               000008D8        analyze_packet (main)
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F2UL_L04               
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008DC - 000008ED (0x12 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F2SL_L04               000008DC        analyze_packet (main)
                                                   float_conversion (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008EE - 00000911 (0x24 bytes), align: 1
  Segment part 9.             Intra module refs:   ?F2SL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000912 - 0000093F (0x2e bytes), align: 1
  Segment part 10.            Intra module refs:   ?F_ADD_L04
                                                   ?F_CMP_EQ_L04
                                                   ?F_CMP_GE_L04
                                                   ?F_CMP_LT_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?TEST_P_L04             00000912 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000940 - 0000095F (0x20 bytes), align: 1
  Segment part 11.            Intra module refs:   ?F_ADD_L04
                                                   ?F_CMP_EQ_L04
                                                   ?F_CMP_GE_L04
                                                   ?F_CMP_LT_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 17
                                                   Segment part 22
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000960 - 00000A07 (0xa8 bytes), align: 1
  Segment part 12.            Intra module refs:   ?F_SUB_L04
                                                   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ADD_L04              00000980        analyze_packet (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A08 - 00000A0D (0x6 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_SUB_L04              00000A08        float_conversion (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A0E - 00000A19 (0xc bytes), align: 1
  Segment part 14.            Intra module refs:   ?F2SL_L04
                                                   ?F_DIV_L04
                                                   ?F_INFINITE_L04
                                                   ?F_MUL_L04
                                                   ?F_NAN_L04
                                                   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ZERO_L04             00000A0E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A1A - 00000A21 (0x8 bytes), align: 1
  Segment part 15.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_INFINITE_L04         00000A1A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A22 - 00000A27 (0x6 bytes), align: 1
  Segment part 16.            Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_NAN_L04              00000A22 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A28 - 00000A41 (0x1a bytes), align: 1
  Segment part 17.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A42 - 00000B17 (0xd6 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_MUL_L04              00000A42        Segment part 46 (?largewr)
                                                   analyze_packet (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000B18 - 00000C27 (0x110 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_DIV_L04              00000B34        analyze_packet (main)
                                                   float_conversion (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000C28 - 00000C45 (0x1e bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_EQ_L04           00000C32        float_conversion (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000C46 - 00000C4D (0x8 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_LT_L04           00000C46        Segment part 14 (?largewr)
                                                   _large_write (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000C4E - 00000C75 (0x28 bytes), align: 1
  Segment part 22.            Intra module refs:   ?F_CMP_GE_L04
                                                   ?F_CMP_LT_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000C76 - 00000C85 (0x10 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_GE_L04           00000C76        Segment part 18 (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xV_SWITCH_L06

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000C86 - 00000D21 (0x9c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CV_SWITCH_L06          00000C98        _large_write (?largewr)
           ?SV_SWITCH_L06          00000CA0 
           ?LV_SWITCH_L06          00000CAC 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D22 - 00000D23 (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE16_L09         00000D22        _large_write (?largewr)
                                                   float_conversion (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D24 - 00000D25 (0x2 bytes), align: 1
  Segment part 1.             Intra module refs:   ?PROLOGUE16_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE15_L09         00000D24 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D26 - 00000D27 (0x2 bytes), align: 1
  Segment part 2.             Intra module refs:   ?PROLOGUE15_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE14_L09         00000D26 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D28 - 00000D29 (0x2 bytes), align: 1
  Segment part 3.             Intra module refs:   ?PROLOGUE14_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE13_L09         00000D28 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D2A - 00000D2B (0x2 bytes), align: 1
  Segment part 4.             Intra module refs:   ?PROLOGUE13_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE12_L09         00000D2A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D2C - 00000D2D (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?PROLOGUE12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE11_L09         00000D2C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D2E - 00000D2F (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?PROLOGUE11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE10_L09         00000D2E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D30 - 00000D31 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?PROLOGUE10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE9_L09          00000D30 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D32 - 00000D33 (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?PROLOGUE9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE8_L09          00000D32 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D34 - 00000D35 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?PROLOGUE8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE7_L09          00000D34 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D36 - 00000D37 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?PROLOGUE7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE6_L09          00000D36 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D38 - 00000D39 (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?PROLOGUE6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE5_L09          00000D38 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D3A - 00000D3B (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?PROLOGUE5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          00000D3A        check_comm (main)
                                                   fs_i2c_dimming_fun (FS_I2C_DIMMIN)
                                                   twi_write (twi)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D3C - 00000D3D (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          00000D3C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D3E - 00000D3F (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          00000D3E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D40 - 00000D41 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          00000D40 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D42 - 00000D43 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D44 - 00000D45 (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B16_L09       00000D44        Segment part 7 (?largewr)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D46 - 00000D47 (0x2 bytes), align: 1
  Segment part 1.             Intra module refs:   ?EPILOGUE_B16_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B15_L09       00000D46 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D48 - 00000D49 (0x2 bytes), align: 1
  Segment part 2.             Intra module refs:   ?EPILOGUE_B15_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B14_L09       00000D48 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D4A - 00000D4B (0x2 bytes), align: 1
  Segment part 3.             Intra module refs:   ?EPILOGUE_B14_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B13_L09       00000D4A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D4C - 00000D4D (0x2 bytes), align: 1
  Segment part 4.             Intra module refs:   ?EPILOGUE_B13_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B12_L09       00000D4C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D4E - 00000D4F (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?EPILOGUE_B12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B11_L09       00000D4E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D50 - 00000D51 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?EPILOGUE_B11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B10_L09       00000D50 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D52 - 00000D53 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?EPILOGUE_B10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B9_L09        00000D52 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D54 - 00000D55 (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?EPILOGUE_B9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B8_L09        00000D54 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D56 - 00000D57 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?EPILOGUE_B8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B7_L09        00000D56 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D58 - 00000D59 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?EPILOGUE_B7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B6_L09        00000D58 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D5A - 00000D5B (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?EPILOGUE_B6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B5_L09        00000D5A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D5C - 00000D5D (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?EPILOGUE_B5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B4_L09        00000D5C        check_comm (main)
                                                   fs_i2c_dimming_fun (FS_I2C_DIMMIN)
                                                   twi_write (twi)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D5E - 00000D5F (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?EPILOGUE_B4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B3_L09        00000D5E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D60 - 00000D61 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?EPILOGUE_B3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        00000D60 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D62 - 00000D63 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        00000D62 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000D64 - 00000D6D (0xa bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        00000D64 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR8_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R8_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR9_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R9_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR10_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R10_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR11_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R11_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR12_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R12_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR13_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R13_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR14_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R14_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR15_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R15_is_cg_reg
                                   00000D6E        _large_write (?largewr)
                                                   float_conversion (?largewr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?largewr

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000D6E - 00000FE1 (0x274 bytes), align: 1
  Segment part 6.             Intra module refs:   _large_write
           LOCAL                   ADDRESS         
           =====                   =======         
           float_conversion        00000D6E 
               CSTACK = 00000000 ( 00000013 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000FE2 - 00000FE5 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   _large_write
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000FE6 - 00000FF3 (0xe bytes), align: 1
  Segment part 8.             Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000FF4 - 00000FF5 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000FF6 - 00000FF7 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   Segment part 9
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000FF8 - 00000FFD (0x6 bytes), align: 1
  Segment part 11.            Intra module refs:   Segment part 10
                                                   Segment part 12
                                                   Segment part 9
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000FFE - 0000100F (0x12 bytes), align: 1
  Segment part 12.            Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001010 - 00001019 (0xa bytes), align: 1
  Segment part 13.            Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000101A - 0000101F (0x6 bytes), align: 1
  Segment part 14.            Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001020 - 00001027 (0x8 bytes), align: 1
  Segment part 15.            Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001028 - 0000102D (0x6 bytes), align: 1
  Segment part 16.            Intra module refs:   Segment part 15
                                                   _large_write
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000102E - 0000102F (0x2 bytes), align: 1
  Segment part 17.            Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001030 - 00001033 (0x4 bytes), align: 1
  Segment part 18.            Intra module refs:   Segment part 17
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001034 - 00001039 (0x6 bytes), align: 1
  Segment part 19.            Intra module refs:   Segment part 14
                                                   Segment part 17
                                                   Segment part 40
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000103A - 00001043 (0xa bytes), align: 1
  Segment part 20.            Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001044 - 00001433 (0x3f0 bytes), align: 1
  Segment part 21.            Intra module refs:   Segment part 50
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _large_write            00001044        printf (?printf)
               calls direct and indirect
               CSTACK = 00000000 ( 000000AB )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001434 - 0000143D (0xa bytes), align: 1
  Segment part 22.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000143E - 00001449 (0xc bytes), align: 1
  Segment part 23.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000144A - 00001451 (0x8 bytes), align: 1
  Segment part 24.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001452 - 00001457 (0x6 bytes), align: 1
  Segment part 25.            Intra module refs:   Segment part 23
                                                   Segment part 24
                                                   Segment part 28
                                                   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001458 - 00001459 (0x2 bytes), align: 1
  Segment part 26.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000145A - 00001461 (0x8 bytes), align: 1
  Segment part 27.            Intra module refs:   Segment part 26
                                                   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001462 - 00001471 (0x10 bytes), align: 1
  Segment part 28.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001472 - 00001477 (0x6 bytes), align: 1
  Segment part 29.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001478 - 0000147F (0x8 bytes), align: 1
  Segment part 30.            Intra module refs:   _large_write
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001480 - 00001485 (0x6 bytes), align: 1
  Segment part 31.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001486 - 00001499 (0x14 bytes), align: 1
  Segment part 32.            Intra module refs:   Segment part 31
                                                   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000149A - 000014A5 (0xc bytes), align: 1
  Segment part 33.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014A6 - 000014A9 (0x4 bytes), align: 1
  Segment part 34.            Intra module refs:   _large_write
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014AA - 000014AD (0x4 bytes), align: 1
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 45
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014AE - 000014B3 (0x6 bytes), align: 1
  Segment part 36.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014B4 - 000014BD (0xa bytes), align: 1
  Segment part 37.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014BE - 000014C7 (0xa bytes), align: 1
  Segment part 38.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014C8 - 000014D1 (0xa bytes), align: 1
  Segment part 39.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014D2 - 000014DF (0xe bytes), align: 1
  Segment part 40.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014E0 - 000014E3 (0x4 bytes), align: 1
  Segment part 41.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014E4 - 000014E5 (0x2 bytes), align: 1
  Segment part 42.            Intra module refs:   Segment part 41
                                                   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014E6 - 000014E9 (0x4 bytes), align: 1
  Segment part 43.            Intra module refs:   Segment part 41
                                                   Segment part 42
                                                   Segment part 44
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014EA - 000014EF (0x6 bytes), align: 1
  Segment part 44.            Intra module refs:   _large_write
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014F0 - 000014F5 (0x6 bytes), align: 1
  Segment part 45.            Intra module refs:   _large_write
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014F6 - 000014F9 (0x4 bytes), align: 1
  Segment part 46.            Intra module refs:   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000014FA - 000014FF (0x6 bytes), align: 1
  Segment part 47.            Intra module refs:   Segment part 46
                                                   _large_write
                                                   float_conversion
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001500 - 0000150B (0xc bytes), align: 1
  Segment part 48.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000150C - 00001519 (0xe bytes), align: 1
  Segment part 49.            Intra module refs:   Segment part 48
                                                   _large_write
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 00001695 - 000016C9 (0x35 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
INITTAB
  Segment part 5. TENTATIVE. Used definition from FS_I2C_DIMMIN
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   
    -------------------------------------------------------------------------
SWITCH
  Relative segment, address: CODE 0000008C - 000000BF (0x34 bytes), align: 1
  Segment part 50.            Intra module refs:   _large_write
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 0000048D - 000004C1 (0x35 bytes), align: 0
  Segment part 3.             Intra module refs:   _large_write

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000151A - 0000151D (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000151A        ?call_low_level_init (?C_STARTUP)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?printf

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000151E - 00001523 (0x6 bytes), align: 1
  Segment part 3.             Intra module refs:   printf
           LOCAL                   ADDRESS         
           =====                   =======         
           put_one_char            0000151E 
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001524 - 00001541 (0x1e bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           printf                  00001524        Segment part 38 (main)
                                                   Segment part 40 (main)
                                                   fs_i2c_dimming_fun (FS_I2C_DIMMIN)
                                                   pwm_dimming_fun (avr_pwm)
               calls direct
               CSTACK = 00000000 ( 00000002 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00001542 - 00001549 (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00001542 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000154A - 00001555 (0xc bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              0000154A 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001556 - 00001561 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00001562 - 000015C1 (0x60 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          00001562        ?need_segment_init (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 7. NOT NEEDED.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000007B (0x7c bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 0000007C - 0000008B (0x10 bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA
------               ----      ----
                    (Rel)  (Rel)  (Abs)
?C_STARTUP             36
?EPILOGUE_B_L09        42
?FILLER_BYTES          16
  + common            124
?FLOATS_L04         1 092
?PROLOGUE_L09          34
?RESET
  + common              4
?SL_DIVMOD_L03         16
?SS_DIVMOD_L02         48
?S_EC_MUL_L02          16
?UL_DIVMOD_L03         70
?UL_SHR_L03            16
?US_DIVMOD_L02         40
?US_SHR_L02            12
?__exit                 6
?largewr            2 069     53
?low_level_init         4
?printf                36
?segment_init         128
?xV_SWITCH_L06        156
FS_I2C_DIMMIN         166     20
  + shared              7
avr_pwm               170     34      6
delay                  46      2
  + shared              7
main                  765    150     17
  + shared                            1
timer                 158      7     12
  + common             64
twi                   250    128      4
uart                  304     25     12
  + common            124
N/A (command line)           712
N/A (alignment)
----------          -----  -----     --
Total:              5 710  1 131     52
  + common            124


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000000 00000000
  01  timer0_isr
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000006 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000006 00000002


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000006 00000002
  01  timer_interrupt_routine
      | Stack used (prev) :  00000006 00000002
      | + function block  :  00000006 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000000C 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  0000000C 00000004
  01  uart_interrupt_routine
      | Stack used (prev) :  0000000C 00000004
      | + function block  :  0000000C 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000018 00000006


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK   RSTACK
    | Stack used (prev) :  00000018 00000006
  02    putchar
        | Stack used (prev) :  00000018 00000006
        | + function block  :  00000000 00000002
  01  put_one_char
      | Stack used (prev) :  00000018 00000008
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018 0000000A


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000018 0000000A
  04        float_conversion
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000013 00000004
  03      _large_write
          | Stack used (prev) :  0000002B 0000000E
          | + function block  :  000000AB 00000002
  02    printf
        | Stack used (prev) :  000000D6 00000010
        | + function block  :  00000002 00000002
  02    init_uart1
        | Stack used (prev) :  00000018 0000000A
        | + function block  :  00000001 00000002
  02    init_uart0
        | Stack used (prev) :  00000018 0000000A
        | + function block  :  00000001 00000002
  02    init_Twi
        | Stack used (prev) :  00000018 0000000A
        | + function block  :  00000000 00000002
  02    init_timer
        | Stack used (prev) :  00000018 0000000A
        | + function block  :  00000000 00000002
  03      printf
          | Stack used (prev) :  000000D6 00000010
          | + function block  :  00000002 00000002
          |  Already listed
  03      EEPROM_Write
          | Stack used (prev) :  00000018 0000000A
          | + function block  :  00000000 00000002
  03      EEPROM_Write
          | Stack used (prev) :  00000018 0000000A
          | + function block  :  00000000 00000002
          |  Already listed
  02    chk_pwm_data
        | Stack used (prev) :  000000D8 00000012
        | + function block  :  00000001 00000002
  03      printf
          | Stack used (prev) :  000000D6 00000010
          | + function block  :  00000002 00000002
          |  Already listed
  04        printf
            | Stack used (prev) :  000000D6 00000010
            | + function block  :  00000002 00000002
            |  Already listed
  05          EEPROM_Read
              | Stack used (prev) :  00000018 0000000A
              | + function block  :  00000000 00000002
  05          EEPROM_Read
              | Stack used (prev) :  00000018 0000000A
              | + function block  :  00000000 00000002
              |  Already listed
  04        start_pwm
            | Stack used (prev) :  00000018 0000000C
            | + function block  :  00000001 00000002
  03      analyze_packet
          | Stack used (prev) :  000000D8 00000012
          | + function block  :  00000004 00000002
  02    check_comm
        | Stack used (prev) :  000000D8 00000014
        | + function block  :  0000000A 00000002
  02    init_mcu
        | Stack used (prev) :  00000018 0000000A
        | + function block  :  00000000 00000002
  02    delay_ms
        | Stack used (prev) :  00000018 0000000A
        | + function block  :  00000000 00000002
  03      printf
          | Stack used (prev) :  000000D6 00000010
          | + function block  :  00000002 00000002
          |  Already listed
  02    pwm_dimming_fun
        | Stack used (prev) :  000000D8 00000012
        | + function block  :  00000004 00000002
  03      printf
          | Stack used (prev) :  000000D6 00000010
          | + function block  :  00000002 00000002
          |  Already listed
  04        Twi_Byte_Read
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
  04        Twi_Byte_Write
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
  04        Twi_Byte_Write
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        Twi_Byte_Write
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        TWI_Start
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
  04        TWI_Start
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        delay_us
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
  03      twi_read
          | Stack used (prev) :  00000018 0000000C
          | + function block  :  00000002 00000002
  04        Twi_Byte_Write
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        Twi_Byte_Write
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        Twi_Byte_Write
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        TWI_Start
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        delay_ms
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  04        delay_us
            | Stack used (prev) :  00000018 0000000A
            | + function block  :  00000000 00000002
            |  Already listed
  03      twi_write
          | Stack used (prev) :  00000018 0000000C
          | + function block  :  00000004 00000002
  03      delay_ms
          | Stack used (prev) :  00000018 0000000A
          | + function block  :  00000000 00000002
          |  Already listed
  02    fs_i2c_dimming_fun
        | Stack used (prev) :  000000D8 00000012
        | + function block  :  00000006 00000002
  01  main
      | Stack used (prev) :  000000E2 00000016
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  000000E2 00000018


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  000000E2 00000018
  01  __low_level_init
      | Stack used (prev) :  000000E2 00000018
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  000000E2 0000001A


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  000000E2 0000001A
  02    __flashcpy
        | Stack used (prev) :  000000E2 0000001A
        | + function block  :  00000000 00000002
  02    __memclr
        | Stack used (prev) :  000000E2 0000001A
        | + function block  :  00000000 00000002
  01  __segment_init
      | Stack used (prev) :  000000E2 0000001C
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  000000E2 0000001E




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 0000007B          7C   com    1
?FILL1               CODE          0000007C - 0000008B          10   rel    0
SWITCH               CODE          0000008C - 000000BF          34   rel    1
CODE                 CODE          000000C0 - 000015C1        1502   rel    1
INITTAB              CODE          000015C2 - 000015CF           E   rel    0
NEAR_ID              CODE          000015D0 - 000016C9          FA   rel    0
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
                     DATA          00000022 - 00000023           2 
                     DATA          00000029 - 0000002C           4 
                     DATA          00000031 - 00000032           2 
                     DATA          00000034 - 00000035           2 
                     DATA          00000037 - 00000038           2 
                     DATA          0000003A - 0000003F           6 
                     DATA          0000004A - 0000004F           6 
                     DATA          00000051 - 00000053           3 
                     DATA          00000056 - 00000057           2 
                     DATA          00000061 - 00000062           2 
                     DATA          00000064 - 00000065           2 
                     DATA          00000070 - 00000071           2 
                     DATA          00000073 - 00000074           2 
                     DATA          0000007A - 0000007A           1 
                     DATA          00000084 - 00000087           4 
                     DATA          0000008A - 0000008B           2 
                     DATA          00000090 - 00000090           1 
                     DATA          00000095 - 00000095           1 
                     DATA          00000098 - 0000009D           6 
CSTACK               DATA          00000100 - 000002FF         200   dse    0
RSTACK               DATA          00000300 - 000003C7          C8   dse    0
NEAR_I               DATA          000003C8 - 000004C1          FA   rel    0
NEAR_Z               DATA          000004C2 - 0000056A          A9   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 5 818 bytes of CODE memory (+             16 range fill )
 1 131 bytes of DATA memory (+ 52 absolute )

Errors: none
Warnings: none

